# Rocket.Chat with SSL Certificate in a Docker Swarm

# Author
# hey, Iâ€™m Vladimir Mikhalev, but my friends call me Valdemar.

# My website with detailed IT guides: https://www.heyvaldemar.com/
# Follow me on YouTube: https://www.youtube.com/channel/UCf85kQ0u1sYTTTyKVpxrlyQ?sub_confirmation=1
# Follow me on Twitter: https://twitter.com/heyValdemar
# Follow me on Instagram: https://www.instagram.com/heyvaldemar/
# Follow me on Facebook: https://www.facebook.com/heyValdemarFB/
# Follow me on TikTok: https://www.tiktok.com/@heyvaldemar
# Follow me on LinkedIn: https://www.linkedin.com/in/heyvaldemar/
# Follow me on GitHub: https://github.com/heyvaldemar

# Communication
# Chat with IT pros on Discord: https://discord.gg/AJQGCCBcqf
# Reach me at ask@sre.gg

# Give Thanks
# Support on GitHub: https://github.com/sponsors/heyValdemar
# Support on Patreon: https://www.patreon.com/heyValdemar
# Support on BuyMeaCoffee: https://www.buymeacoffee.com/heyValdemar
# Support on Ko-fi: https://ko-fi.com/heyValdemar
# Support on PayPal: https://www.paypal.com/paypalme/heyValdemarCOM

# Install Docker Swarm by following my guide: https://www.heyvaldemar.com/install-docker-swarm-on-ubuntu-server/

# Configure Traefik before applying the configuration.
# Traefik configuration: https://github.com/heyValdemar/traefik-ssl-certificate-docker-swarm

# Deploy Rocket.Chat in a Docker Swarm using the command:
# docker stack deploy -c rocketchat-traefik-ssl-certificate-docker-swarm.yml rocketchat

version: '3.9'

x-default-opts:
  &default-opts
  logging:
    options:
      max-size: "10m"

networks:
  rocketchat-network:
    driver: overlay
  traefik-network:
    external: true

volumes:
  rocketchat-uploads:
  rocketchat-mongodb:

services:
  mongodb:
    <<: *default-opts
    # Image tag (replace with yours)
    image: bitnami/mongodb:6.0
    volumes:
     - rocketchat-mongodb:/bitnami/mongodb
    environment:
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_REPLICA_SET_NAME: rs0
      MONGODB_PORT_NUMBER: 27017
      MONGODB_INITIAL_PRIMARY_HOST: mongodb
      MONGODB_INITIAL_PRIMARY_PORT_NUMBER: 27017
      MONGODB_ADVERTISED_HOSTNAME: mongodb
      MONGODB_ENABLE_JOURNAL: 'true'
      ALLOW_EMPTY_PASSWORD: 'yes'
    networks:
      - rocketchat-network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      # Container resources (replace with yours)
      resources:
        limits:
          cpus: '1.55'
          memory: 2G
        reservations:
          cpus: '0.55'
          memory: 512M

  rocketchat:
    <<: *default-opts
    # Image tag (replace with yours)
    image: rocket.chat:6
    volumes:
      - rocketchat-uploads:/app/uploads
    environment:
      PORT: 3000
      # Rocket.Chat URL (replace with yours)
      ROOT_URL: https://rocketchat.heyvaldemar.net
      MONGO_URL: mongodb://mongodb:27017/rocketchat?replicaSet=rs0
      MONGO_OPLOG_URL: mongodb://mongodb:27017/local?replicaSet=rs0
      DEPLOY_METHOD: docker
      Accounts_UseDNSDomainCheck: 'false'
    networks:
      - rocketchat-network
      - traefik-network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      # Container resources (replace with yours)
      resources:
        limits:
          cpus: '2.55'
          memory: 4G
        reservations:
          cpus: '1.35'
          memory: 2G
      labels:
        - "traefik.enable=true"
        # Rocket.Chat URL (replace with yours)
        - "traefik.http.routers.rocketchat.rule=Host(`rocketchat.heyvaldemar.net`)"
        - "traefik.http.routers.rocketchat.service=rocketchat"
        - "traefik.http.routers.rocketchat.entrypoints=websecure"
        - "traefik.http.services.rocketchat.loadbalancer.server.port=3000"
        - "traefik.http.routers.rocketchat.tls=true"
        - "traefik.http.services.rocketchat.loadbalancer.passhostheader=true"
        - "traefik.http.routers.rocketchat.middlewares=compresstraefik"
        - "traefik.http.middlewares.compresstraefik.compress=true"
    depends_on:
      - mongodb
